type Member = record{
    name:text;
    lastname:text;
    email:text;
    registration_month:nat32;
};
type ForumMessage= record{
    author: text;
    content: text;
};

type Article = record{
    email: text;
    tittle:text;
    content:text;
};

type Errors = variant {
    MissingBlank: text;
    SameEmail:text;
    NotAllowed:text;
    TittleNot:text;
    InvalidEmail:text;
};
type Ok = variant {
    Success: text;
    Article:Article;
};
type Result = 
    variant {
        Ok:Ok;
        Err: Errors;
    };
type Badgets = variant {
    NewMember:text;
    ContributingMember:text;
    SeniorMember:text;
};
service :{
    "create_member":(text,text,text)-> (Result);
    "list_members_name": () -> (vec text) query;
    "list_members": () -> (vec Member) query;
    "list_members_email": () -> (vec text) query;
    "list_members_lastname": () -> (vec text) query;
    "get_new_members_name":()->(vec text) query;
    "get_new_members_lastname":()->(vec text) query;
    "publish_article":(text,text,text)->(Result);
    "get_article":()->(vec Article) query;
    "get_events_city_from_api":(text)->(text);
    "delete_member_by_email":(text)->(Result);
    "get_forum_messages":()->(vec ForumMessage) query; 
    "post_forum_message":(text,text)->(Result);
};